/*
* SPDX-FileCopyrightText: Copyright 2025 Arm Limited and/or its affiliates <open-source-office@arm.com>
* SPDX-License-Identifier: Apache-2.0
*/
#version 450
#extension GL_ARM_tensors : require
#extension GL_EXT_shader_explicit_arithmetic_types : require

layout(local_size_x = 1, local_size_y = 1, local_size_z = 1) in;

layout(set = 0, binding = 0) writeonly uniform tensorARM<uint16_t, 4> outTensor;

void main() {
    ivec3 coord = ivec3(gl_GlobalInvocationID.xyz);

    uint n = 0;
    uint c0 = 0;
    uint c1 = 1;
    uint h = uint(coord.y);
    uint w = uint(coord.x);

    uint coordsR[4] = uint[](n, c0, h, w);
    uint coordsG[4] = uint[](n, c1, h, w);

    tensorWriteARM(outTensor, coordsR, uint16_t(12345));  // Fixed R
    tensorWriteARM(outTensor, coordsG, uint16_t(54321));  // Fixed G
}

/*
 * SPDX-FileCopyrightText: Copyright 2023-2025 Arm Limited and/or its affiliates <open-source-office@arm.com>
 * SPDX-License-Identifier: Apache-2.0
 */

#define IN_OUT_T %in_out_t%
#define ACC_T %acc_t%
#define MIN %in_out_t_lowest%
#define MAX %in_out_t_max%

layout(local_size_x = %warpX%) in;

layout(push_constant) uniform PushConstants {
    int32_t inputZeroPoint;
    int32_t outputZeroPoint;
} pushConstants;

layout(constant_id = 0) const uint32_t RANK = RANK_MAX;

layout(set = 0, binding = 0) uniform tensorARM<IN_OUT_T, RANK> outputData;
layout(set = 1, binding = 0) uniform tensorARM<IN_OUT_T, RANK> inputData;

void main() {
    uint[RANK] index;
    getIndex(outputData, index);

    IN_OUT_T value;
    tensorReadARM(inputData, index, value);

    ACC_T res = ACC_T(pushConstants.inputZeroPoint) - ACC_T(value) + ACC_T(pushConstants.outputZeroPoint);
    res = isnan(float(value)) ? value : isinf(float(value)) ? -value : clamp(res, ACC_T(MIN), ACC_T(MAX));

    tensorWriteARM(outputData, index, IN_OUT_T(res));
}
